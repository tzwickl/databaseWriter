group 'rocks.inspectit.jaeger'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'

// tag::repositories[]
repositories {
    mavenCentral()
}
// end::repositories[]

// tag::dependencies[]
sourceCompatibility = 1.8
targetCompatibility = 1.8
version = 1.0
def mainClass = 'rocks.inspectit.jaeger.dw.Main'

dependencies {
    compile 'org.projectlombok:lombok:1.16.18'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.8.0-beta0'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.8.0-beta0'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-to-slf4j
    compile group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: '2.10.0'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'

    compile project(':rocks.inspectit.jaeger.model')
    compile project(':rocks.inspectit.jaeger.connectors')

    testCompile group: 'junit', name: 'junit', version: '4.12'
}
// end::dependencies[]

// tag::jar[]
jar {
    baseName = 'rocks.inspectit.jaeger.dw'
    version =  '0.1.0'
}
// end::jar[]

// tag::task[]
run {
    main = mainClass
    classpath = sourceSets.main.runtimeClasspath
    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Jaeger business transaction analyzer',
                'Implementation-Version': version,
                'Main-Class': mainClass
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
// end::task[]